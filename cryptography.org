# -*- mode: org; fill-column: 79; -*-

#+TITLE: Cryptography I
#+AUTHOR: WLHarvey4
#+DATE: \today
#+SUBTITLE: By Stanford University
#+SUBTITLE: Version {{{VERSION}}} {{{time(%F %R)}}}

#+MACRO: VERSION 0.0.6
#+STARTUP:hidestars

#+TEXINFO_FILENAME:cryptography.info
#+TEXINFO_CLASS: info
#+TEXINFO_HEADER:
#+TEXINFO_POST_HEADER:
#+TEXINFO_DIR_CATEGORY:Computer Science
#+TEXINFO_DIR_TITLE:Cryptography I
#+TEXINFO_DIR_DESC:Learn about cryptographic systems

#+LATEX_CLASS: book
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:Learn the inner workings of cryptographic systems and how to
#+DESCRIPTION:correctly use them in real-world applications.
#+KEYWORDS:Cryptography
#+LATEX_COMPILER: pdflatex


# Place overall introduction into LaTeX Abstract
#+BEGIN_EXPORT latex
\abstract{In this course you will learn the inner workings of cryptographic
systems and how to correctly use them in real-world applications.}
#+END_EXPORT

# Place Info introduction into @Top node
#+BEGIN_EXPORT texinfo
In this course you will learn the inner workings of cryptographic systems and
how to correctly use them in real-world applications.
#+END_EXPORT

* About This Course
  :PROPERTIES:
  :UNNUMBERED: t
  :END:
  :CI:
  #+CINDEX:cryptographic systems
  #+CINDEX:secret key
  :END:

  # Place Texinfo PDF introduction into @iftex conditional block
  #+TEXINFO: @iftex
  In this course you will learn the inner workings of cryptographic systems and
  how to correctly use them in real-world applications.
  #+TEXINFO: @end iftex

  Cryptography is an indispensable tool for protecting information in computer
  systems.  The course begins with a detailed discussion of how two parties who
  have a shared secret key can communicate securely when a powerful adversary
  eavesdrops and tampers with traffic.  We will examine many deployed protocols
  and analyze mistakes in existing systems.  The second half of the course
  discusses public-key techniques that let two parties generate a shared secret
  key.  Throughout the course participants will be exposed to many exciting
  open problems in the field and work on fun (optional) programming projects.
  In a second course ([[https://www.coursera.org/learn/crypto2][Crypto II]]) we will cover more advanced cryptographic
  tasks such as zero-knowledge, privacy mechanisms, and other forms of
  encryption.

** Instructor
   - Dan Boneh, Professor of Computer Science

   Welcome to Cryptography I!  You’re joining thousands of learners currently
   enrolled in the course.  I'm excited to have you in the class and look
   forward to your contributions to the learning community.

   To begin, I recommend taking a few minutes to explore the course site.
   Review the material we’ll cover each week, and preview the assignments
   you’ll need to complete to pass the course.  Click Discussions to see forums
   where you can discuss the course material with fellow students taking the
   class.

   If you have questions about course content, please post them in the forums
   to get help from others in the course community.  For technical problems
   with the Coursera platform, visit the [[http://learner.coursera.help/][Learner Help Center]].

   Good luck as you get started, and I hope you enjoy the course!

   @@texinfo:@heading Instructor Biography@@
   @@latex:\section*{Instructor Biography}@@
   Professor Dan Boneh heads the applied cryptography group at the Computer
   Science department at Stanford University.  Professor Boneh's research
   focuses on applications of cryptography to computer security.  His work
   includes cryptosystems with novel properties, web security, security for
   mobile devices, digital copyright protection, and cryptanalysis.  He is the
   author of over a hundred publications in the field and a recipient of the
   Packard Award, the Alfred P.@@texinfo:@tie{}@@Sloan Award, and the RSA
   award in mathematics.  Last year Dr.@@texinfo:@tie{}@@Boneh received the
   Ishii award for industry education innovation.  Professor Boneh received
   his Ph.D from Princeton University and joined Stanford in 1997.

* Overview of Cryptography
  :PROPERTIES:
  :UNNUMBERED: t
  :END:

  @@texinfo:@heading Week 1@@
  @@latex:\section*{Week 1}@@
  This week's topic is an overview of what cryptography is about as well as our
  first example ciphers.
** Course Overview
*** Homework and Grading
    - There will be a weekly problem set that includes an optional programming
      component. Participants are expected to solve these assignments on their
      own, but can discuss clarification questions on the course forum.
    - Participants can attempt each of the problem sets three times every 8
      hours. After each submission the system will provide explanations about
      correct and incorrect answers. When participants attempt to solve the
      problem set again, many of the questions will be different.
    - The programming assignments are optional. Participants are free to use
      any language of their choice to solve the programming assignments. Our
      sample code will be given in Python although that code is not required to
      complete these optional assignments.
    - A passing grade be given to participants who obtain more than 80% of the
      maximum score on the problem sets and final exam. The programming
      assignments are optional.
    - In-video quizzes are not graded and are only there to help participants
      with self assessment.
    - Many of the modules contain links to research papers for further
      readings. These are intended for participants interested in learning more
      about the material covered. These further readings are optional.
    - There will be a final exam (no midterm) that is similar in style to the
      problem sets, but covers the material of the entire course.

*** Resources
    - Background on discrete probability :: [[https://en.wikibooks.org/wiki/High_School_Mathematics_Extensions/Discrete_Probability][High School Mathematics Extensions/Discrete Probability]]
    - A course in applied cryptography :: [[https://toc.cryptobook.us][A Graduate Course in Applied Cryptography]]
    - Computational number theory :: [[http://shoup.net/ntb/ntb-v2.pdf][Computational Number Theory]]

** What is Cryptography

** History of Cryptography

** Discrete Probability Introduction
   :PROPERTIES:
   :UNNUMBERED: t
   :END:
   :CI:
   #+CINDEX:discrete probability
   :END:

*** Discrete Probability

*** Discrete Probability Continued

** Information Theoretic Security and The One Time Pad
   :CI:
   #+CINDEX:one time pad
   :END:

** Lecture slides for all six weeks

** Course overview and additional reading resources

* Stream Ciphers
  @@texinfo:@heading Week 1 Continued@@
  You will learn about pseudo-randomness and how to use it for encryption.  We
  will also look at a few basic definitions of secure encryption.

** Stream Ciphers and Pseudo Random Generators

** Attacks on Stream Ciphers and The One Time Pad

** Real-World Stream Ciphers

** PRG Security Definitions

** Semantic Security

** Stream Ciphers are Semantically Secure

** Week 1 --- Problem Set

** Week 1 --- Programming Assignment

* Block Ciphers
:CI:
#+CINDEX: block cipher
#+CINDEX: AES
#+CINDEX: 3DES
:END:
  @@texinfo:@heading Week 2@@
  We introduce a new primitive called a block cipher that will let us build
  more powerful forms of encryption.  We will look at a few classic
  block-cipher constructions (AES and 3DES) and see how to use them for
  encryption.  Block ciphers are the work horse of cryptography and have many
  applications.  Next week we will see how to use block ciphers to provide data
  integrity.  The optional programming assignment this week asks students to
  build an encryption/decryption system using AES.

** What are Block Ciphers

** The Data Encryption Standard

** Exhaustive Search Attacks

** More Attacks on Block Ciphers

** The AES Block Cipher

** Block Ciphers From PRGs

** Review --- PRPs and PRFs

** Modes of Operation --- One Time Key

** Security for Many-Time Key --- CPA Security

** Modes of Operation --- Many Time Key -- CBC

** Modes of Operation --- Many Time Key -- CTR
** Week 2 ---- Problem Set
** Week 2 --- Programming Assignment
* Message Integrity
:CI:
#+CINDEX: data integrity
#+CINDEX: authenticate video files
#+CINDEX: hash chain
:END:
  @@texinfo:@heading Week 3@@
  This week's topic is data integrity.  We will discuss a number of classic
  constructions for MAC systems that are used to ensure data integrity.  For
  now we only discuss how to prevent modification of non-secret data.  Next
  week we will come back to encryption and show how to provide both
  confidentiality and integrity.  This week's programming project shows how to
  authenticate large video files.  Even if you don't do the project, please
  read the project description --- it teaches an important concept called a
  hash chain.

** Message Authentication Codes
** MACs Based On PRFs
** CBC-MAC and NMAC
** MAC Padding
** PMAC and the Carter-Wegman MAC
** Introduction
** Generic Birthday Attack
** The Merkle-Damgard Paradigm
** Constructing Compression Functions
** HMAC
** Timing attacks on MAC verification
** Week 3 --- Problem Set
** Week 3 --- Programming Assignment
* Authenticated Encryption
:CI:
#+CINDEX: authenticated encryption
#+CINDEX: confidentiality
#+CINDEX: integrity
#+CINDEX: symmetric encryption
#+CINDEX: ciphertext attack
:END:
  @@texinfo:@heading Week 4@@
  This week's topic is authenticated encryption: encryption methods that ensure
  both confidentiality and integrity.  We will also discuss a few odds and ends
  such as how to search on encrypted data.  This is our last week studying
  symmetric encryption.  Next week we start with key management and public-key
  cryptography.  As usual there is also an extra credit programming project.
  This week's project involves a bit of networking to experiment with a chosen
  ciphertext attack on a toy web site.
** Active Attacks on CPA-Secure Encryption
** Definitions
** Chosen Ciphertext Attacks
** Constructions From Ciphers and MACs
** Case Study --- TLS 1.2
** CBC Padding Attacks
** Attacking Non-Atomic Decryption
** Key Derivation
** Deterministic Encryption
** Deterministic Encryption --- SIV and Wide PRP
** Tweakable Encryption
** Format Preserving Encryption
** Week 4 --- Problem Set
** Week 4 --- Programming Project
* Basic Key Exchange
:CI:
#+CINDEX: key exchange
#+CINDEX: public key cryptography
#+CINDEX: computational number theory
#+CINDEX: Euclid
#+CINDEX: Fermat
#+CINDEX: Euler
#+CINDEX: Legendre
:END:
  @@texinfo:@heading Week 5@@
  This week's topic is basic key exchange: how to setup a secret key between
  two parties.  For now we only consider protocols secure against
  eavesdropping.  This question motivates the main concepts of public key
  cryptography, but before we build public-key systems we need to take a brief
  detour and cover a few basic concepts from computational number theory.  We
  will start with algorithms dating back to antiquity (Euclid) and work our way
  up to Fermat, Euler, and Legendre.  We will also mention in passing a few
  useful concepts from 20th century math.  Next week we will put our hard work
  from this week to good use and construct several public key encryption
  systems.
** Trusted 3rd Parties
** Merkle Puzzles
** The Diffie-Hellman Protocol
** Public-Key Encryption
** Notation
** Fermat and Euler
** Modular e'th Roots
** Arithmetic algorithms
** Intractable Problems
** More background on number theory
** Week 5 --- Problem Set
** Week 5 --- Programming Assignment
* Public-Key Encryption
:CI:
#+CINDEX: public key encryption
#+CINDEX: RSA
#+CINDEX: trapdoor functions
#+CINDEX: Diffie-Hellman protocol
#+CINDEX: chosen ciphertext security (CCA Security)
:END:
  @@texinfo:@heading Week 6@@
  This week's topic is public key encryption: how to encrypt using a public key
  and decrypt using a secret key.  Public key encryption is used for key
  management in encrypted file systems, in encrypted messaging systems, and for
  many other tasks.  The videos cover two families of public key encryption
  systems: one based on trapdoor functions (RSA in particular) and the other
  based on the Diffie-Hellman protocol.  We construct systems that are secure
  against tampering, also known as chosen ciphertext security (CCA security).
  There has been a ton of research on CCA security over the past decade and
  given the allotted time we can only summarize the main results from the last
  few years.  The lectures contain suggestions for further readings for those
  interested in learning more about CCA secure public-key systems.  The problem
  set this week involves a bit more math than usual, but should expand your
  understanding of public-key encryption.  Please don't be shy about posting
  questions in the forum.  This is the last week of this Crypto I course.  I
  hope everyone learned a lot and enjoyed the material.  Crypto is a beautiful
  topic with lots of open problems and room for further research.  I look
  forward to seeing you in Crypto II where we will cover additional core topics
  and a few more advanced topics.
** Definitions and Security
** Constructions
** The RSA Trapdoor Permutation
** PKCS 1
** Is RSA a One-Way Function
** RSA in Practice
** The ElGamal Public-key System
** ElGamal Security
** ElGamal Variants With Better Security
** A Unifying Theme
** Farewell
** Week 6 --- Problem Set
** Week 6 --- Programming Assignment
* Index
  :PROPERTIES:
  :INDEX:    cp
  :END:

